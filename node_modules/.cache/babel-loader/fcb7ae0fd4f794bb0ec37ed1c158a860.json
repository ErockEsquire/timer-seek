{"ast":null,"code":"var _jsxFileName = \"/home/erock/projekt/react-test/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlaybackRAF, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Playback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst PlaybackRAF = () => {\n  const [runtime, setRuntime] = useState(0);\n  const [maxtime, setMaxtime] = useState(15000);\n  const [play, setPlay] = useState(false);\n  useEffect(() => {\n    let interval = null;\n\n    if (play) {\n      interval = requestAnimationFrame(() => setRuntime(runtime => runtime + 100));\n    } else if (!play && runtime !== 0) {\n      cancelAnimationFrame(interval);\n    }\n\n    if (runtime === maxtime) {\n      cancelAnimationFrame(interval);\n      setPlay(false);\n    }\n\n    return () => cancelAnimationFrame(interval);\n  }, [play, runtime]);\n  const MaxDiv = styled.div`\n    border-radius: 6px;\n    background-color: rgba(255, 94, 98, .95);\n    height: 50px;\n    width: ${props => props.width}px;\n    margin: 1rem;\n    box-shadow: \n      -6px -6px 14px rgba(255, 255, 255, .7),\n      -6px -6px 10px rgba(255, 255, 255, .5),\n      6px 6px 8px rgba(255, 255, 255, .075),\n      6px 6px 10px rgba(0, 0, 0, .15);\n  `;\n  const TimeDiv = styled.div`\n    background-color:  rgba(255, 146, 148, 0.95);\n    height: 50px;\n    border-radius: 6px;\n    width: ${props => props.width}%;\n  `;\n  const currentTime = runtime / maxtime * 100;\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"playback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, Math.floor(runtime / 1000), \" / \", Math.floor(maxtime / 1000)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button\",\n    onClick: () => setPlay(!play),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, play ? \"Pause\" : \"Play\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button\",\n    onClick: () => setRuntime(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(MaxDiv, {\n    width: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimeDiv, {\n    width: currentTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;\n\nconst Playback = () => {\n  const [runtime, setRuntime] = useState(0);\n  const [maxtime, setMaxtime] = useState(15000);\n  const [play, setPlay] = useState(false);\n  useEffect(() => {\n    let interval = null;\n\n    if (play) {\n      interval = setInterval(() => {\n        setRuntime(runtime => runtime + 100);\n      }, 100);\n    } else if (!play && runtime !== 0) {\n      clearInterval(interval);\n    }\n\n    if (runtime === maxtime) {\n      clearInterval(interval);\n      setPlay(false);\n    }\n\n    return () => clearInterval(interval);\n  }, [play, runtime, maxtime]);\n  const MaxDiv = styled.div`\n    border-radius: 6px;\n    background-color: rgba(255, 94, 98, .95);\n    height: 50px;\n    width: ${props => props.width}px;\n    margin: 1rem;\n    box-shadow: \n      -6px -6px 14px rgba(255, 255, 255, .7),\n      -6px -6px 10px rgba(255, 255, 255, .5),\n      6px 6px 8px rgba(255, 255, 255, .075),\n      6px 6px 10px rgba(0, 0, 0, .15);\n  `;\n  const TimeDiv = styled.div`\n    background-color:  rgba(255, 146, 148, 0.95);\n    height: 50px;\n    border-radius: 6px;\n    width: ${props => props.width}%;\n  `;\n  const currentTime = runtime / maxtime * 100;\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"playback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, Math.floor(runtime / 1000), \" / \", Math.floor(maxtime / 1000)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button\",\n    onClick: () => setPlay(!play),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, play ? \"Pause\" : \"Play\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button\",\n    onClick: () => setRuntime(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(MaxDiv, {\n    width: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimeDiv, {\n    width: currentTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/erock/projekt/react-test/src/App.js"],"names":["React","useState","useEffect","styled","App","PlaybackRAF","runtime","setRuntime","maxtime","setMaxtime","play","setPlay","interval","requestAnimationFrame","cancelAnimationFrame","MaxDiv","div","props","width","TimeDiv","currentTime","Math","floor","Playback","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n      <PlaybackRAF/>\n      <Playback/>\n    </div>\n  );\n}\n\nconst PlaybackRAF = () => {\n\n  const [runtime, setRuntime] = useState(0)\n  const [maxtime, setMaxtime] = useState(15000)\n  const [play, setPlay] = useState(false)\n\n  useEffect(() => {\n    let interval = null;\n    if (play) {\n      interval = requestAnimationFrame(() => setRuntime(runtime => runtime + 100))\n    } else if (!play && runtime !== 0) {\n      cancelAnimationFrame(interval);\n    }\n    if (runtime === maxtime) {\n      cancelAnimationFrame(interval);\n      setPlay(false);\n    }\n    return () => cancelAnimationFrame(interval);\n  }, [play, runtime]);\n\n\n  const MaxDiv = styled.div`\n    border-radius: 6px;\n    background-color: rgba(255, 94, 98, .95);\n    height: 50px;\n    width: ${props => props.width}px;\n    margin: 1rem;\n    box-shadow: \n      -6px -6px 14px rgba(255, 255, 255, .7),\n      -6px -6px 10px rgba(255, 255, 255, .5),\n      6px 6px 8px rgba(255, 255, 255, .075),\n      6px 6px 10px rgba(0, 0, 0, .15);\n  `\n\n  const TimeDiv = styled.div`\n    background-color:  rgba(255, 146, 148, 0.95);\n    height: 50px;\n    border-radius: 6px;\n    width: ${props => props.width}%;\n  `\n\n  const currentTime = (runtime/maxtime) * 100;\n\n  return (\n    <main className=\"playback\">\n      <div>\n        <span>{Math.floor(runtime/1000)} / {Math.floor(maxtime/1000)}</span>\n        <span className=\"button\" onClick={() => setPlay(!play)}>{play ? \"Pause\":\"Play\"}</span>\n        <span className=\"button\" onClick={() => setRuntime(0)}>Reset</span>\n      </div>\n      <MaxDiv width={500}>\n        <TimeDiv width={currentTime}></TimeDiv>\n      </MaxDiv>\n    </main>\n  )\n}\n\nexport default App;\n\n\nconst Playback = () => {\n\n  const [runtime, setRuntime] = useState(0)\n  const [maxtime, setMaxtime] = useState(15000)\n  const [play, setPlay] = useState(false)\n\n  useEffect(() => {\n    let interval = null;\n    if (play) {\n      interval = setInterval(() => {\n        setRuntime(runtime => runtime + 100);\n      }, 100);\n    } else if (!play && runtime !== 0) {\n      clearInterval(interval);\n    }\n\n    if (runtime === maxtime) {\n      clearInterval(interval);\n      setPlay(false)\n    }\n    return () => clearInterval(interval);\n  }, [play, runtime, maxtime]);\n\n\n  const MaxDiv = styled.div`\n    border-radius: 6px;\n    background-color: rgba(255, 94, 98, .95);\n    height: 50px;\n    width: ${props => props.width}px;\n    margin: 1rem;\n    box-shadow: \n      -6px -6px 14px rgba(255, 255, 255, .7),\n      -6px -6px 10px rgba(255, 255, 255, .5),\n      6px 6px 8px rgba(255, 255, 255, .075),\n      6px 6px 10px rgba(0, 0, 0, .15);\n  `\n\n  const TimeDiv = styled.div`\n    background-color:  rgba(255, 146, 148, 0.95);\n    height: 50px;\n    border-radius: 6px;\n    width: ${props => props.width}%;\n  `\n\n  const currentTime = (runtime/maxtime) * 100;\n\n  return (\n    <main className=\"playback\">\n      <div>\n        <span>{Math.floor(runtime/1000)} / {Math.floor(maxtime/1000)}</span>\n        <span className=\"button\" onClick={() => setPlay(!play)}>{play ? \"Pause\":\"Play\"}</span>\n        <span className=\"button\" onClick={() => setRuntime(0)}>Reset</span>\n      </div>\n      <MaxDiv width={500}>\n        <TimeDiv width={currentTime}></TimeDiv>\n      </MaxDiv>\n    </main>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}