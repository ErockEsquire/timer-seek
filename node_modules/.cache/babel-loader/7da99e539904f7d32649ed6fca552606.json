{"ast":null,"code":"var _jsxFileName = \"/home/erock/projekt/react-test/src/App.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\nfunction App() {\n  const [runtime, setRuntime] = useState(0);\n  const [maxtime, setMaxtime] = useState(1500);\n  const [play, setPlay] = useState(false);\n  const MaxDiv = styled.div`\n    background-color: red;\n    height: 50px;\n    width: ${props => props.width}px;\n  `;\n  const TimeDiv = styled.div`\n    background-color: white;\n    height: 50px;\n    width: ${props => props.width}%;\n  `;\n  const currentTime = runtime / maxtime;\n\n  const playTime = () => {\n    let interval;\n    let timer = runtime;\n\n    if (play) {\n      interval = setInterval(() => setRuntime(timer += 1000), 100);\n    } else {\n      clearInterval(interval);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, Math.floor(runtime / 100), \" / \", Math.floor(maxtime / 100)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPlay(!play);\n      playTime();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, play ? \"Pause\" : \"Play\"), /*#__PURE__*/React.createElement(MaxDiv, {\n    width: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimeDiv, {\n    width: currentTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/erock/projekt/react-test/src/App.js"],"names":["React","useState","styled","App","runtime","setRuntime","maxtime","setMaxtime","play","setPlay","MaxDiv","div","props","width","TimeDiv","currentTime","playTime","interval","timer","setInterval","clearInterval","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMS,MAAM,GAAGR,MAAM,CAACS,GAAI;AAC5B;AACA;AACA,aAAaC,KAAK,IAAIA,KAAK,CAACC,KAAM;AAClC,GAJE;AAMA,QAAMC,OAAO,GAAGZ,MAAM,CAACS,GAAI;AAC7B;AACA;AACA,aAAaC,KAAK,IAAIA,KAAK,CAACC,KAAM;AAClC,GAJE;AAMA,QAAME,WAAW,GAAGX,OAAO,GAACE,OAA5B;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACrB,QAAIC,QAAJ;AACA,QAAIC,KAAK,GAAGd,OAAZ;;AAEA,QAAGI,IAAH,EAAS;AACPS,MAAAA,QAAQ,GAAGE,WAAW,CAAC,MAAMd,UAAU,CAACa,KAAK,IAAI,IAAV,CAAjB,EAAkC,GAAlC,CAAtB;AACD,KAFD,MAGK;AACHE,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,IAAI,CAACC,KAAL,CAAWlB,OAAO,GAAC,GAAnB,CAAP,SAAmCiB,IAAI,CAACC,KAAL,CAAWhB,OAAO,GAAC,GAAnB,CAAnC,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACG,MAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AAAeQ,MAAAA,QAAQ;AAAG,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDR,IAAI,GAAG,OAAH,GAAW,MAApE,CAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEO,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAWD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\nfunction App() {\n\n  const [runtime, setRuntime] = useState(0)\n  const [maxtime, setMaxtime] = useState(1500)\n  const [play, setPlay] = useState(false)\n\n  const MaxDiv = styled.div`\n    background-color: red;\n    height: 50px;\n    width: ${props => props.width}px;\n  `\n\n  const TimeDiv = styled.div`\n    background-color: white;\n    height: 50px;\n    width: ${props => props.width}%;\n  `\n\n  const currentTime = runtime/maxtime;\n\n  const playTime = () => {\n    let interval;\n    let timer = runtime;\n\n    if(play) {\n      interval = setInterval(() => setRuntime(timer += 1000), 100)\n    }\n    else {\n      clearInterval(interval)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n\n      <span>{Math.floor(runtime/100)} / {Math.floor(maxtime/100)}</span>\n      <button onClick={() => {setPlay(!play);playTime()}}>{play ? \"Pause\":\"Play\"}</button>\n      <MaxDiv width={500}>\n        <TimeDiv width={currentTime}></TimeDiv>\n      </MaxDiv>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}